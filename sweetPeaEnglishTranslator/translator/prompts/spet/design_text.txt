Text:
color = factor("color", ["red", "blue"])
word = factor("word", ["green", "red"])
iti = factor("iti", [200, 300, 500])
congruency = factor("congruency", [congruent, incongruent])
we counterbalanced the color factor with the word factor. however, the experiment sequences were generated subject to the constraint that no congruent trials were included. all experiment sequences contained at least 20 trials and were sampled uniformly from the space of all counterbalanced sequences.
Code:
constraints = [minimum_trials(20), exclude(congruency, "congruent")]
crossing = [color, word]
Text:
word = factor("word", ["hallo", "yellow", "neutral"])
color = factor("color", ["abas", "ibas", "ubas", "lolo"])
task_transition = factor("task transition", [s, r])
response_transition = factor("response tansition", [s, r])
we counterbalanced the factors color, word, task, task transition, and response transition. however, the experiment sequences were generated subject to two constraints. first, we allowed for no more than 4 of the same task transitions in a row. second, we allowed for no more than 4 of the same response transitions in a row.
Code:
constraints = [at_most_k_in_a_row (4, task_transition),at_most_k_in_a_row (4, response_transition)]
crossing = [color, word, task, task_transition, response transition]
Text:
color = factor("color", ["green", "blue"])
letter = factor("letter", ["a", "b", "c", "z"])
word = factor("word", ["green", "blue"])
target = factor("target", ["yes"])
we counterbalanced the letter factor with the target factor.
Code:
constraints = []
crossing = [letter, target]
Text:
word = factor("word", ["yellow", "purple"])
color = factor("color", ["yellow", "purple"])
number = factor("number", [3, 7, 5])
congruency = factor("congruency", [congruent, incongruent])
number_transition = factor("number transition", [increase, decrease, unchanged])
we counterbalanced the factors number, color, and word. however, the experiment sequences were generated subject to two constraints. first, we excluded all trials in which the number transition was unchanged. second, we allowed for no more than three trials with the same number in a row. all experiment sequences contained at least twelve trials and were sampled uniformly from the space of all counterbalanced sequences.
Code:
constraints = [minimum_trials(12), exclude(number_transition, "unchanged"), at_most_k_in_a_row (3, number)]
crossing = [number, Color, Word]
Text:
shape = factor("shape", [1,"oval", "r"])
motion = factor("motion", [1, occre, abla, down])
number = factor("number", [one, two, three])
we counterbalanced the factors motion, shape, and number. however, we excluded all trials in which the motion was down. all experiment sequences contained at least 100 trials.
Code:
constraints = [exclude(motion, "down"), minimum_trials(100)]
crossing = [motion, shape, number]
Text:
labi = factor("labi", ["dibi", "dubi", "dabi", "du"])
lubi = factor("lubi", ["dibi", "dubi", "a", "b"])
congruency = factor("congruency", ["c", "i"])
response_transition = factor("response transition", [asr, zdsa])
we counterbalanced the experiment sequence with respect to the factor congruency. the experiment sequences were generated subject to the constraint that no more than k=7 of the same response transitions could occur in a row.
Code:
constraints = [at_most_k_in_a_row (7, response_transition)]
crossing = [congruency]
Text:
re = factor("re", ["color", "word", "location"])
word = factor("word", ["word", "location"])
color = factor("color", ["word", congruent])
location = factor("location", [color, "word"])
congruency = factor("congruency", ["olor, congruent])
we counterbalanced the color factor with the word factor and the location factor. however, the experiment sequences were generated subject to the constraint that no congruent trials were included. all experiment sequences contained at least 20 trials and were sampled uniformly from the space of all counterbalanced sequences.
Code:
constraints = [minimum_trials(20), exclude(congruency, "congruent")]
crossing = [color, word, location]
Text:
ahp = factor("ahp", [1,"oval", "r"])
mabu = factor("mabu", [1, occre, abla, down])
libidu = factor("libidu", [one, two, three])
we counterbalanced the factors ahp, and libidu seperatly and we crossed mubu with ahp. however, we excluded all trials in which libidu was not 1 or 3. all experiment sequences contained at least 37 trials
Code:
constraints = [exclude(libidu, "two"), minimum_trials(37)]
crossing = [[ahp], [libid], [mubu, ahp]]
Text:
lobo = factor("lobo", ["ishi", "ashi"])
ur = factor("ur", ["a", "b", "c", "z"])
wibidu = factor("wibidu", ["orbo", "ashi"])
taratulla = factor("taratulla", ["yes", "japjap"])
We crossed the taratulla factor with the ur and wibidu factor. Individually we counterbalanded the wibidu factor with the lobo factor There was a constraint that at least two wibidu factors of the same level had to follow each other.
Code:
constraints = [AtLeasKInARow(2, wibidu)]
crossing = [[taratulla, ur, wibidu], [wibidu, lobo]]
Text:
wat = factor("wat", [2, 8])
wubi = factor("wubi", ["ah", "oh"])
lick = factor("lick", [3, 7, 5])
carab = factor("carab", [orpho, urda])
libi_dibi = factor("libi dibi", [in, da, do])
we counterbalanced the factors wat and lick seperatly. We also crossed wubi with carab and wat, lick und libi dibi. however, the experiment sequences were generated subject to two constraints. first, we excluded all trials in which libi dibi was in. second, we allowed for no more than three trials with the same lick in a row. all experiment sequences contained at least twelve trials and were sampled uniformly from the space of all counterbalanced sequences.
Code:
constraints = [minimum_trials(12), exclude(libi_dibi, "in"), AtMostKInARow (3, lick)]
crossing = [[wat], [lick], [wubi, carab, wat], [lick, libi]]
Text:
rowi = factor("rowi", [2, 4, 8, 12])
ribi = factor("ribi", [aba, uba, iba, eba])
rili_dili = factor("rili dili", ["hicks", "hacks"])
hemhem = factor("hemhem", [robo, bobo, boro])
We counterbalanced the rowi factor with the hemhem factor. Ee also counterbalanced the ribi factor and the hemhem factor seperatly. all experiment sequences contained at least 967 trials.
Code:
constraints = [minimum_trials(967)]
crossing = [[rowi, hemem], [ribi], [hemhem]]
Text:
